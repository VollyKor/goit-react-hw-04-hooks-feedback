{"version":3,"sources":["components/Statistics/Statistic.module.css","components/SectionStatistic/SectionStatistic.module.css","components/FeedBackOptions/FeedbackOptions.module.css","App.module.css","components/FeedBackOptions/FeedbackOptions.jsx","components/Statistics/Statistic.jsx","components/Notification/Notification.jsx","components/SectionStatistic/SectionStatistic.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","item","onClick","className","s","button","Statistic","props","entries","arr","Notification","SectionStatistic","data","good","neutral","bad","countValues","values","reduce","acc","e","btnList","total","positivePercentage","goodFeedbackCount","positiveCount","roundedValue","Math","round","isNaN","countPositiveFeedbackPercentage","App","state","handleCLick","name","currentTarget","textContent","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,KAAO,0B,oBCAzBD,EAAOC,QAAU,CAAC,QAAU,oC,gBCA5BD,EAAOC,QAAU,CAAC,OAAS,kC,yCCA3BD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAW,sBAAsB,gBAAgB,2BAA2B,aAAa,wBAAwB,WAAW,wB,oKCCtJ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAEjD,OADwBC,OAAOC,KAAKH,GACbI,KAAI,SAAAC,GAAI,OAC7B,wBAAmBC,QAASL,EAAiBM,UAAWC,IAAEC,OAA1D,SACG,CAACJ,IADSA,M,oBCHF,SAASK,EAAUC,GAiBhC,OAhBkBT,OAAOU,QAAQD,GACRP,KAAI,SAAAS,GAC3B,MAAe,uBAAXA,EAAI,GAEJ,oBAAiBN,UAAWC,IAAEH,KAA9B,SACE,yDAA0BQ,EAAI,GAA9B,QADOA,EAAI,IAOf,oBAAiBN,UAAWC,IAAEH,KAA9B,SACE,sCAAOQ,EAAI,GAAX,aAAkBA,EAAI,OADfA,EAAI,OCdJ,SAASC,IACtB,OAAO,mBAAGP,UAAU,eAAb,+BCIM,SAASQ,EAAT,GAAsD,IAA1BC,EAAyB,EAAzBA,KAAMf,EAAmB,EAAnBA,gBACvCgB,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,QAASC,EAAQH,EAARG,IAEjBC,EAAc,WAIlB,OAHkBlB,OAAOmB,OAAOL,GAEhBM,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAOC,IAAI,IAejD,OACE,oCACE,wDACA,qBAAKjB,UAAWC,IAAEiB,QAAlB,SACE,cAAC1B,EAAD,CACEC,QAASgB,EACTf,gBAAiBA,MAGF,IAAlBmB,IACC,qCACE,4CACA,oBAAIb,UAAU,OAAd,SACE,cAACG,EAAD,CACEO,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLO,MAAON,IACPO,mBA7B4B,WACtC,IAAMC,EAAoBZ,EAAKC,KAEzBY,EAAiB,IAAMT,IAAiBQ,EAC1CE,EAAeC,KAAKC,MAAMH,GAI9B,OAHII,MAAMH,KACRA,EAAe,GAEVA,EAqBuBI,UAK1B,cAACpB,EAAD,O,IC7CaqB,E,4MACnBC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,YAAc,SAAAb,GAEZ,IAAMc,EAAOd,EAAEe,cAAcC,YAC7B,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJJ,EAAOI,EAAUJ,GAAQ,O,uDAM9B,OACE,mCACE,cAACvB,EAAD,CACEC,KAAM2B,KAAKP,MACXnC,gBAAiB0C,KAAKN,oB,GAtBCO,aCCjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.41d0814d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistic_item__1M885\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnList\":\"SectionStatistic_btnList__2ptra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__Bt0MT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3A9ep\",\"App-logo\":\"App_App-logo__1QJhq\",\"App-logo-spin\":\"App_App-logo-spin__oLNrH\",\"App-header\":\"App_App-header__2zWLS\",\"App-link\":\"App_App-link__1UjOQ\"};","import s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  const feedbackButtons = Object.keys(options);\r\n  return feedbackButtons.map(item => (\r\n    <button key={item} onClick={onLeaveFeedback} className={s.button}>\r\n      {[item]}\r\n    </button>\r\n  ));\r\n}\r\n","import s from './Statistic.module.css';\r\n\r\nexport default function Statistic(props) {\r\n  const feedbacks = Object.entries(props);\r\n  const jsxArr = feedbacks.map(arr => {\r\n    if (arr[0] === 'positivePercentage') {\r\n      return (\r\n        <li key={arr[0]} className={s.item}>\r\n          <p>{`Positive feedback: ${arr[1]}%`}</p>\r\n        </li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <li key={arr[0]} className={s.item}>\r\n        <p>{`${arr[0]}: ${arr[1]}`}</p>\r\n      </li>\r\n    );\r\n  });\r\n  return jsxArr;\r\n}\r\n","export default function Notification() {\r\n  return <p className=\"notification\">No feedback given</p>;\r\n}\r\n","import s from './SectionStatistic.module.css';\r\nimport FeedbackOptions from '../FeedBackOptions/FeedbackOptions';\r\nimport Statistic from '../Statistics/Statistic';\r\nimport Notification from '../Notification/Notification';\r\n\r\nexport default function SectionStatistic({ data, onLeaveFeedback }) {\r\n  const { good, neutral, bad } = data;\r\n\r\n  const countValues = () => {\r\n    const valuesArr = Object.values(data);\r\n    let sum = 0;\r\n    sum = valuesArr.reduce((acc, e) => (acc += e), 0);\r\n    return sum;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const goodFeedbackCount = data.good;\r\n\r\n    const positiveCount = (100 / countValues()) * goodFeedbackCount;\r\n    let roundedValue = Math.round(positiveCount);\r\n    if (isNaN(roundedValue)) {\r\n      roundedValue = 0;\r\n    }\r\n    return roundedValue;\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <h2>Please Leave Feedback </h2>\r\n      <div className={s.btnList}>\r\n        <FeedbackOptions\r\n          options={data}\r\n          onLeaveFeedback={onLeaveFeedback}\r\n        />\r\n      </div>\r\n      {countValues() !== 0 ? (\r\n        <>\r\n          <h3>Statistics</h3>\r\n          <ul className=\"list\">\r\n            <Statistic\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={countValues()}\r\n              positivePercentage={countPositiveFeedbackPercentage()}\r\n            />\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <Notification />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.module.css';\r\nimport SectionStatistic from './components/SectionStatistic/SectionStatistic';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleCLick = e => {\r\n    // const { data } = this.props;\r\n    const name = e.currentTarget.textContent;\r\n    this.setState(prevState => {\r\n      return {\r\n        [name]: prevState[name] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SectionStatistic\r\n          data={this.state}\r\n          onLeaveFeedback={this.handleCLick}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}