{"version":3,"sources":["components/Statistics/Statistic.module.css","components/FeedBackOptions/FeedbackOptions.module.css","App.module.css","components/FeedBackOptions/FeedbackOptions.jsx","components/Statistics/Statistic.jsx","components/Notification/Notification.jsx","components/Totalfeedback/Totalfeedback.jsx","components/PositiveFeedbackPercentage/PositiveFeedbackPercentage.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","item","onClick","className","s","button","Statistic","data","countValues","entries","arr","Notification","CountTotalFeedback","PositiveFeedbackPercentage","state","goodFeedbackCount","good","positiveCount","roundedValue","Math","round","isNaN","countReducer","prevState","type","payload","Feedback","useReducer","neutral","bad","dispatch","values","reduce","acc","e","hidden","event","name","currentTarget","textContent","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,KAAO,0B,iBCAzBD,EAAOC,QAAU,CAAC,OAAS,kC,wCCA3BD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAW,sBAAsB,gBAAgB,2BAA2B,aAAa,wBAAwB,WAAW,wB,kICCtJ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAEjD,OADwBC,OAAOC,KAAKH,GACbI,KAAI,SAAAC,GAAI,OAC7B,wBAAmBC,QAASL,EAAiBM,UAAWC,IAAEC,OAA1D,SACG,CAACJ,IADSA,M,oBCHF,SAASK,EAAT,GAA2C,IAAtBC,EAAqB,EAArBA,KAAqB,EAAfC,YAiBxC,OAhBkBV,OAAOW,QAAQF,GACRP,KAAI,SAAAU,GAC3B,MAAe,uBAAXA,EAAI,GAEJ,oBAAiBP,UAAWC,IAAEH,KAA9B,SACE,yDAA0BS,EAAI,GAA9B,QADOA,EAAI,IAOf,oBAAiBP,UAAWC,IAAEH,KAA9B,SACE,sCAAOS,EAAI,GAAX,aAAkBA,EAAI,OADfA,EAAI,OCdJ,SAASC,IACtB,OAAO,mBAAGR,UAAU,eAAb,+BCDM,SAASS,EAAT,GAA8C,IAAhBJ,EAAe,EAAfA,YAC3C,OACE,oBAAIL,UAAU,OAAd,SACE,uCAAUK,SCHD,SAASK,EAAT,GAGX,IAFFC,EAEC,EAFDA,MACAN,EACC,EADDA,YAEMO,EAAoBD,EAAME,KAE5BC,EAAiB,IAAMT,IAAiBO,EACxCG,EAAeC,KAAKC,MAAMH,GAI9B,OAHII,MAAMH,KACRA,EAAe,GAGf,oBAAIf,UAAU,OAAd,SACE,qDAAwBe,EAAxB,UCNN,IAAMI,EAAe,SAACC,EAAD,GAAmC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACvC,OAAO,2BAAKF,GAAZ,kBAAwBC,EAAOD,EAAUC,GAAQC,KAGpC,SAASC,IAAY,IAAD,EACPC,qBAAWL,EAAc,CACjDN,KAAM,EACNY,QAAS,EACTC,IAAK,IAJ0B,mBAC1Bf,EAD0B,KACnBgB,EADmB,KAYjC,SAAStB,IAIP,OAHkBV,OAAOiC,OAAOjB,GAEhBkB,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAOC,IAAI,GAIjD,OACE,0BAAS/B,UAAU,YAAnB,UACE,oBAAIgC,QAAM,EAAV,uBACA,sDAEA,qBAAKhC,UAAU,gBAAf,SACE,cAACR,EAAD,CAAiBC,QAASkB,EAAOjB,gBAlBvC,SAAqBuC,GACnB,IAAMC,EAAOD,EAAME,cAAcC,YACjCT,EAAS,CAAEN,KAAMa,EAAMZ,QAAS,SAkB9B,oBAAItB,UAAU,SACK,IAAlBK,IACC,qCACE,4CACA,qBAAIL,UAAU,OAAd,UACE,cAACG,EAAD,CAAWC,KAAMO,EAAON,YAAaA,IACrC,cAACI,EAAD,CAAoBJ,YAAaA,IACjC,cAACK,EAAD,CACEC,MAAOA,EACPN,YAAaA,UAKnB,cAACG,EAAD,OC/CO,SAAS6B,IACtB,OAAO,cAACd,EAAD,ICDTe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.44c2ec9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistic_item__1M885\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__Bt0MT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3A9ep\",\"App-logo\":\"App_App-logo__1QJhq\",\"App-logo-spin\":\"App_App-logo-spin__oLNrH\",\"App-header\":\"App_App-header__2zWLS\",\"App-link\":\"App_App-link__1UjOQ\"};","import s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  const feedbackButtons = Object.keys(options);\r\n  return feedbackButtons.map(item => (\r\n    <button key={item} onClick={onLeaveFeedback} className={s.button}>\r\n      {[item]}\r\n    </button>\r\n  ));\r\n}\r\n","import s from './Statistic.module.css';\r\n\r\nexport default function Statistic({ data, countValues }) {\r\n  const feedbacks = Object.entries(data);\r\n  const jsxArr = feedbacks.map(arr => {\r\n    if (arr[0] === 'positivePercentage') {\r\n      return (\r\n        <li key={arr[0]} className={s.item}>\r\n          <p>{`Positive feedback: ${arr[1]}%`}</p>\r\n        </li>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <li key={arr[0]} className={s.item}>\r\n        <p>{`${arr[0]}: ${arr[1]}`}</p>\r\n      </li>\r\n    );\r\n  });\r\n  return jsxArr;\r\n}\r\n","export default function Notification() {\r\n  return <p className=\"notification\">No feedback given</p>;\r\n}\r\n","export default function CountTotalFeedback({ countValues }) {\r\n  return (\r\n    <li className=\"item\">\r\n      <p>Total {countValues()}</p>\r\n    </li>\r\n  );\r\n}\r\n","export default function PositiveFeedbackPercentage({\r\n  state,\r\n  countValues,\r\n}) {\r\n  const goodFeedbackCount = state.good;\r\n\r\n  let positiveCount = (100 / countValues()) * goodFeedbackCount;\r\n  let roundedValue = Math.round(positiveCount);\r\n  if (isNaN(roundedValue)) {\r\n    roundedValue = 0;\r\n  }\r\n  return (\r\n    <li className=\"item\">\r\n      <p>Positive Feedbacks: {roundedValue}% </p>\r\n    </li>\r\n  );\r\n}\r\n","import { useReducer } from 'react';\r\nimport FeedbackOptions from '../FeedBackOptions/FeedbackOptions';\r\nimport Statistic from '../Statistics/Statistic';\r\nimport Notification from '../Notification/Notification';\r\nimport CountTotalFeedback from '../Totalfeedback/Totalfeedback';\r\nimport PositiveFeedbackPercentage from '../PositiveFeedbackPercentage/PositiveFeedbackPercentage';\r\n\r\nconst countReducer = (prevState, { type, payload }) => {\r\n  return { ...prevState, [type]: prevState[type] + payload };\r\n};\r\n\r\nexport default function Feedback() {\r\n  const [state, dispatch] = useReducer(countReducer, {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  });\r\n\r\n  function handleCLick(event) {\r\n    const name = event.currentTarget.textContent;\r\n    dispatch({ type: name, payload: 1 });\r\n  }\r\n\r\n  function countValues() {\r\n    const valuesArr = Object.values(state);\r\n    let sum = 0;\r\n    sum = valuesArr.reduce((acc, e) => (acc += e), 0);\r\n    return sum;\r\n  }\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <h2 hidden> Feedback</h2>\r\n      <p>Please Leave Feedback</p>\r\n\r\n      <div className=\"btn-container\">\r\n        <FeedbackOptions options={state} onLeaveFeedback={handleCLick} />\r\n      </div>\r\n      <ul className=\"List\"></ul>\r\n      {countValues() !== 0 ? (\r\n        <>\r\n          <h3>Statistics</h3>\r\n          <ul className=\"list\">\r\n            <Statistic data={state} countValues={countValues} />\r\n            <CountTotalFeedback countValues={countValues} />\r\n            <PositiveFeedbackPercentage\r\n              state={state}\r\n              countValues={countValues}\r\n            />\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <Notification />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.module.css';\r\nimport Feedback from './components/Feedback/Feedback';\r\n// import SectionStatistic from './components/SectionStatistic/SectionStatistic';\r\n\r\nexport default function App() {\r\n  return <Feedback />;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}